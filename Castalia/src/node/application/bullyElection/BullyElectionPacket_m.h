//
// Generated file, do not edit! Created by nedtool 4.6 from src/node/application/bullyElection/BullyElectionPacket.msg.
//

#ifndef _BULLYELECTIONPACKET_M_H_
#define _BULLYELECTIONPACKET_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "ApplicationPacket_m.h"
// }}

/**
 * Enum generated from <tt>src/node/application/bullyElection/BullyElectionPacket.msg:7</tt> by nedtool.
 * <pre>
 * enum MessageType
 * {
 * 
 *     HEARTBEAT = 1;
 *     ELECTION = 2;
 *     OKAY = 3;
 *     LEADER = 4;
 * }
 * </pre>
 */
enum MessageType {
    HEARTBEAT = 1,
    ELECTION = 2,
    OKAY = 3,
    LEADER = 4
};

/**
 * Struct generated from src/node/application/bullyElection/BullyElectionPacket.msg:14 by nedtool.
 */
struct BullyElectionData
{
    BullyElectionData();
    unsigned short nodeID;
    int messageType;
};

void doPacking(cCommBuffer *b, BullyElectionData& a);
void doUnpacking(cCommBuffer *b, BullyElectionData& a);

/**
 * Class generated from <tt>src/node/application/bullyElection/BullyElectionPacket.msg:19</tt> by nedtool.
 * <pre>
 * packet BullyElectionDataPacket extends ApplicationPacket
 * {
 *     BullyElectionData extraData;
 * }
 * </pre>
 */
class BullyElectionDataPacket : public ::ApplicationPacket
{
  protected:
    BullyElectionData extraData_var;

  private:
    void copy(const BullyElectionDataPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BullyElectionDataPacket&);

  public:
    BullyElectionDataPacket(const char *name=NULL, int kind=0);
    BullyElectionDataPacket(const BullyElectionDataPacket& other);
    virtual ~BullyElectionDataPacket();
    BullyElectionDataPacket& operator=(const BullyElectionDataPacket& other);
    virtual BullyElectionDataPacket *dup() const {return new BullyElectionDataPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual BullyElectionData& getExtraData();
    virtual const BullyElectionData& getExtraData() const {return const_cast<BullyElectionDataPacket*>(this)->getExtraData();}
    virtual void setExtraData(const BullyElectionData& extraData);
};

inline void doPacking(cCommBuffer *b, BullyElectionDataPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BullyElectionDataPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _BULLYELECTIONPACKET_M_H_

